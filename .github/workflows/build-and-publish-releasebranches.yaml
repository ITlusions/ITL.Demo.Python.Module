name: Build and Publish Python Package

# on:
#   push:
#     branches:
#       - 'feature/*'
#       - develop
#       - main
#       - 'release/*'
#   pull_request:
#     branches:
#       - develop
#       - main

permissions:
  contents: write
  packages: write

jobs:
  ci-build:
    if: |
        startsWith(github.ref, 'refs/heads/feature/') || 
        startsWith(github.ref, 'refs/heads/release/') || 
        (github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'closed') && 
        (github.base_ref == 'develop' || github.base_ref == 'main')) || 
        (github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
          ls -l dist/

  release:
    if: startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Get Version from Tag
        id: get_version
        run: |
          git fetch --tags --force || true
          LAST_TAG=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$LAST_TAG" ]]; then
            echo "Error: No tags found in the repository."
            exit 1
          fi
          echo "Using version from tag: $LAST_TAG"
          echo "PACKAGE_VERSION=$LAST_TAG" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
          ls -l dist/

      - name: Push Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.email "info@itlusions.nl"
          git config --global user.name "ActionsBot"
          git push origin $PACKAGE_VERSION